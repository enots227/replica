"""
Django settings for replica_api project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from logging import Logger
from pathlib import Path
import socket
from django.utils.translation import gettext_lazy as _
from kafka_cluster.kafka import Kafka, KafkaConnector, KafkaKSQL, KafkaSchemaRegistry


logger = Logger(__name__)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent
APP_DIR = BASE_DIR.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# noinspection SpellCheckingInspection
SECRET_KEY = 'c|Pz5{Vys{?RVJN)W0YPHmB@i(POqX@$E%?kX?uaA}fuHs@LH.|-_mTy0J47mxyxIz~xv{ha[U.Q2MEW'

# noinspection SpellCheckingInspection1
JWT_SECRET_ENCRYPTION_KEY = '1gROjwPpqU3K4xu1cCbDF8p8PppyMeE7drh4oUhSWj0='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_guid',
    'rest_framework',
    'corsheaders',
    # 's4_django',
    # 's4_django.middleware',
    # 's4_django.database',
    'accounts',
    'kafka_cluster',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # extras
    'django_guid.middleware.guid_middleware',
    # custom middlewares
    # 's4_django.middleware.errors.JsonErrorMiddleware',
]

ROOT_URLCONF = 'replica_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'replica_api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'source',
        'USER': 'db_user',
        'PASSWORD': 'db_password',
        'HOST': 'postgres1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redis
# REDIS_DATABASES = {
#     'default': {
#         'HOST': 'redis',
#         'PORT': 6379
#     },
# }

# Kafka
KAFKA_BROKERS = 'broker1:29092,broker2:29093'
KAFKA_SCHEMA_REGISTRY = 'http://schema-registry:8081'
KAFKA_CLIENT_ID = socket.gethostname()
KAFKA_CONNECT = os.environ.get("KAFKA_CONNECT")
KSQL = os.environ.get("KSQL")
KAFKA = Kafka(
    brokers = KAFKA_BROKERS,
    connector = KafkaConnector(url='http://' + KAFKA_CONNECT),
    ksql = KafkaKSQL(url='http://' + KSQL),
    schema_registry = KafkaSchemaRegistry(url=KAFKA_SCHEMA_REGISTRY),
)

# Translations
LANGUAGES = [
    ('en', _('English')),
]

LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

# Request ID
DJANGO_GUID = {
    'GUID_HEADER_NAME': 'REQ-ID',
    'VALIDATE_GUID': True,
    'RETURN_HEADER': True,
    'EXPOSE_HEADER': True,
    'INTEGRATIONS': [],
    'IGNORE_URLS': [],
    'UUID_LENGTH': 32,
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000"
]

# Logging
# noinspection SpellCheckingInspection
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            # 'format': '{asctime} {levelname} {correlation_id} {name}.{funcName}:{lineno} {process:d} {thread:d}\n'
            #           '{msgid}{message}{json_data}',
            'format': '{asctime} {levelname} {name}.{funcName}:{lineno} {process:d} {thread:d}\n'
                      '{message}',
            'style': '{',
        },
        'console_debugging': {
            # 'format': '{asctime} {levelname} {correlation_id} - {name}.{funcName}:{lineno}\n'
            #           '{msgid}{message}{json_data}',
            'format': '{asctime} {levelname}  - {name}.{funcName}:{lineno}\n'
                      '{message}',
            'style': '{',
            'datefmt': '%H:%M:%S',
        }
    },
    'filters': {
        # 'request_id': {
        #     '()': 'django_guid.log_filters.CorrelationId'
        # },
        # 'msgid': {
        #     '()': 's4_django.log.MessageId'
        # },
        # 'jsonify': {
        #     '()': 's4_django.log.JsonData'
        # },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'console_debugging',
            # 'filters': ['request_id', 'msgid', 'jsonify'],
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': F'{APP_DIR}/logs/replica_api.log',
            'formatter': 'verbose',
            # 'filters': ['request_id', 'msgid', 'jsonify'],
        },
        # 'mail_admins': {
        #     'level': 'ERROR',
        #     'class': 'django.utils.log.AdminEmailHandler',
        #     'formatter': 'verbose',
        #     # 'filters': ['request_id', 'msgid', 'jsonify'],
        # },
    },
    'loggers': {
        '': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
        'asyncio': {
            'level': 'WARN'
        },
        'django': {
            'level': 'INFO',
        },
        'django.utils.autoreload': {
            'level': 'WARN',
            'propagate': True,
        },
        'django_guid': {
            'level': 'WARN'
        },
    }
}
